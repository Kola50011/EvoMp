"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path='../../../typings/index.d.ts' />
var EventHandler_1 = require("../../EvoMp.Module.EventHandler/Client/EventHandler");
function initSetFunctions() {
    EventHandler_1.default.subscribe('ClientWrapper.Set.setSetting', function (args) { API.setSetting(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setGameplayCameraActive', function (args) { API.setGameplayCameraActive(); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setCanOpenChat', function (args) { API.setCanOpenChat(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setDisplayWastedShard', function (args) { API.setDisplayWastedShard(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setUiColor', function (args) { API.setUiColor(args[0], args[1], args[2]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setEntityInvincible', function (args) { API.setEntityInvincible(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleLivery', function (args) { API.setVehicleLivery(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleLocked', function (args) { API.setVehicleLocked(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleDoorState', function (args) { API.setVehicleDoorState(args[0], args[1], args[2]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleExtra', function (args) { API.setVehicleExtra(args[0], args[1], args[2]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleNumberPlate', function (args) { API.setVehicleNumberPlate(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleEngineStatus', function (args) { API.setVehicleEngineStatus(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleSpecialLightStatus', function (args) { API.setVehicleSpecialLightStatus(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setEntityCollissionless', function (args) { API.setEntityCollissionless(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleMod', function (args) { API.setVehicleMod(args[0], args[1], args[2]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleBulletproofTyres', function (args) { API.setVehicleBulletproofTyres(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleNumberPlateStyle', function (args) { API.setVehicleNumberPlateStyle(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehiclePearlescentColor', function (args) { API.setVehiclePearlescentColor(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleWheelColor', function (args) { API.setVehicleWheelColor(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleWheelType', function (args) { API.setVehicleWheelType(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleModColor1', function (args) { API.setVehicleModColor1(args[0], args[1], args[2], args[3]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleModColor2', function (args) { API.setVehicleModColor2(args[0], args[1], args[2], args[3]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleTyreSmokeColor', function (args) { API.setVehicleTyreSmokeColor(args[0], args[1], args[2], args[3]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleWindowTint', function (args) { API.setVehicleWindowTint(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleEnginePowerMultiplier', function (args) { API.setVehicleEnginePowerMultiplier(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleEngineTorqueMultiplier', function (args) { API.setVehicleEngineTorqueMultiplier(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleNeonState', function (args) { API.setVehicleNeonState(args[0], args[1], args[2]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleNeonColor', function (args) { API.setVehicleNeonColor(args[0], args[1], args[2], args[3]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleDashboardColor', function (args) { API.setVehicleDashboardColor(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleTrimColor', function (args) { API.setVehicleTrimColor(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerNametag', function (args) { API.setPlayerNametag(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerNametagVisible', function (args) { API.setPlayerNametagVisible(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerNametagColor', function (args) { API.setPlayerNametagColor(args[0], args[1], args[2], args[3]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerSkin', function (args) { API.setPlayerSkin(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerDefaultClothes', function (args) { API.setPlayerDefaultClothes(); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerTeam', function (args) { API.setPlayerTeam(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehiclePrimaryColor', function (args) { API.setVehiclePrimaryColor(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleSecondaryColor', function (args) { API.setVehicleSecondaryColor(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleCustomPrimaryColor', function (args) { API.setVehicleCustomPrimaryColor(args[0], args[1], args[2], args[3]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setVehicleCustomSecondaryColor', function (args) { API.setVehicleCustomSecondaryColor(args[0], args[1], args[2], args[3]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerClothes', function (args) { API.setPlayerClothes(args[0], args[1], args[2], args[3]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerAccessory', function (args) { API.setPlayerAccessory(args[0], args[1], args[2], args[3]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setEntityPositionFrozen', function (args) { API.setEntityPositionFrozen(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setEntityVelocity', function (args) { API.setEntityVelocity(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerWeaponTint', function (args) { API.setPlayerWeaponTint(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setEntityPosition', function (args) { API.setEntityPosition(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setEntityRotation', function (args) { API.setEntityRotation(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerIntoVehicle', function (args) { API.setPlayerIntoVehicle(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerHealth', function (args) { API.setPlayerHealth(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setTextLabelText', function (args) { API.setTextLabelText(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setTextLabelColor', function (args) { API.setTextLabelColor(args[0], args[1], args[2], args[3], args[4]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setTextLabelSeethrough', function (args) { API.setTextLabelSeethrough(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerInvincible', function (args) { API.setPlayerInvincible(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerWantedLevel', function (args) { API.setPlayerWantedLevel(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setPlayerArmor', function (args) { API.setPlayerArmor(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setBlipPosition', function (args) { API.setBlipPosition(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setWaypoint', function (args) { API.setWaypoint(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setBlipColor', function (args) { API.setBlipColor(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setBlipSprite', function (args) { API.setBlipSprite(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setBlipName', function (args) { API.setBlipName(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setBlipTransparency', function (args) { API.setBlipTransparency(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setBlipShortRange', function (args) { API.setBlipShortRange(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setBlipScale', function (args) { API.setBlipScale(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setBlipScale', function (args) { API.setBlipScale(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setChatVisible', function (args) { API.setChatVisible(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setHudVisible', function (args) { API.setHudVisible(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setMarkerType', function (args) { API.setMarkerType(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setMarkerColor', function (args) { API.setMarkerColor(args[0], args[1], args[2], args[3], args[4]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setMarkerScale', function (args) { API.setMarkerScale(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setMarkerDirection', function (args) { API.setMarkerDirection(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setAudioTime', function (args) { API.setAudioTime(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setGameVolume', function (args) { API.setGameVolume(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setEntityTransparency', function (args) { API.setEntityTransparency(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setEntityDimension', function (args) { API.setEntityDimension(args[0], args[1]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setWeather', function (args) { API.setWeather(args[0]); });
    EventHandler_1.default.subscribe('ClientWrapper.Set.setTime', function (args) { API.setTime(args[0], args[1]); });
}
exports.default = initSetFunctions;
//# sourceMappingURL=SetFunctions.js.map